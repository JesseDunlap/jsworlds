{
  "name": "node-use",
  "version": "1.0.0",
  "description": "Allows for a different, more general approach to using libraries.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": "",
  "author": {
    "name": "Jesse Dunlap",
    "email": "jesse.dunlap@hydrais.com"
  },
  "license": "MIT",
  "readme": "# Tutorial Video #\n\n[Watch on YouTube](http://youtu.be/cq5u_doeoIM)\n\n# Introduction\n\n**node-use** is designed to be an easy approach to global package management,\nimplementing a system that functions similar to traditional ``include`` statements,\nlike the ones found in **C#**, **C++**, **Python**, etc.\n\n# Using node-use\n\n1. Install **node-use** with NPM\n\n```\nnpm install node-use\n```\n\n2. Require **node-use** (You only need to do this once at the beginning of your code)\n\n```\nrequire('node-use')\n```\n\n\n# node-use PATH\n\nBy default, **node-use** will search in the ``lib`` directory at your code's root\nwhen you attempt to ``use`` a library. You can add items to the PATH by pushing\nelements to the __usePATH variable:\n\n```\n__usePATH.push(\"path/to/your/lib/folder\");\n```\n\n# use function\n\nThe ``use`` function takes a string, and can be used anywhere in your code, after\nyou have typed ``require('node-use')``. ``use`` will search all existing directories\nin ``__usePATH``.\n\n```\nuse(\"com.jessedunlap.SomeLibrary\");\n```\n\nThe above statement would look for the file ``lib/com/jessedunlap/SomeLibrary.js``.\nAdditionally, if the last item in the path specified is a directory, ``use`` will\nautomatically search that directory for all ``.js`` files.\n\nAny files found will be added to the ``global`` object, allowing them to be utilized\nglobally. The file name is used to determine the key in the global object. (e.g. if the\nfile is named ``SomeLibrary.js`` you could then access SomeLibrary by simply writing ``SomeLibrary.whatever()``)\n\nLibraries are written just like node modules, using ``module.exports``. Anything\nexported from the module will be added to the global value.",
  "readmeFilename": "README.md",
  "_id": "node-use@1.0.0",
  "_from": "node-use@*"
}
