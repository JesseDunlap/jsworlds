{
  "name": "superserialize",
  "version": "1.0.0",
  "description": "An advanced serialization and deserialization system, which allows you to encode functions inside of JSON, then deserialize them back into working objects.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/JesseDunlap/superserialize"
  },
  "keywords": [
    "serialize",
    "json",
    "functions"
  ],
  "author": {
    "name": "Jesse Dunlap",
    "email": "jesse.dunlap@hydrais.com"
  },
  "license": "MIT",
  "readme": "# superserialize\n\nsuperserialize is an advanced serialization system, which allows you to serialize\nJavaScript objects, including their functions, into a JSON-compatible data structure.\nthe JSON can then be sent across a socket, HTTP, or whatever you wish. Once the JSON\nhas been sent to the destination, superserialize can then deserialize it back into\na JavaScript object, complete with working functions.\n\n# Installation\n\n```\nnpm install superserialize\n```\n\n**You can use superserialize in browser JavaScript with the ``browserify`` module**\n\n# Usage Example\n\n```javascript\nvar serialize = require('superserialize').serialize,\n\tdeseralize = require('superserialize').deserialize;\n\t\nvar TestObject = {\n\tsayHello: function(name) {\n\t\tconsole.log(name + \": Hi there!\");\n\t}\n};\n\nvar serialized = serialize(TestObject);\n\nconsole.log(serialized); // This will output a JSON-compatible object\n\nvar deserialized = deserialize(serialized);\n\ndeserialize.sayHello(\"Bob\"); // This will output \"Bob: Hi there!\" as expected!\n```\n\n# License\n\nsuperserialize was created by Jesse Dunlap, and is licensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "superserialize@1.0.0",
  "_from": "superserialize@"
}
